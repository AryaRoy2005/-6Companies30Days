

class Solution {

    HashMap<Character, String> map; 


    public List<String> helper(String digits) {
        if(digits.length()==0){
            List<String> ans = new ArrayList<>(); 
            ans.add(""); 
            return ans; 
        }

        List<String> smallOutput = helper(digits.substring(1)); 

        String letters = map.get(digits.charAt(0)); 

        ArrayList<String> output = new ArrayList<>(); 

        for(int i = 0; i<letters.length(); i++){
            for(int j = 0; j<smallOutput.size(); j++){
                output.add(letters.charAt(i)+smallOutput.get(j)); 
            }
        }

        return output; 
    }

    public List<String> letterCombinations(String digits) {
        if(digits.length()==0){
            return new ArrayList<String>(); 
        }

        map = new HashMap<>(); 

        map.put('2',"abc"); 

        map.put('3',"def"); 

        map.put('4',"ghi"); 

        map.put('5',"jkl"); 

        map.put('6',"mno"); 

        map.put('7',"pqrs"); 

        map.put('8',"tuv"); 

        map.put('9',"wxyz"); 
        

        return helper(digits); 
    }
}
